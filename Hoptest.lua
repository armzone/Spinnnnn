-- üéÆ Auto Server Hopper - ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python Monitor (‡∏°‡∏µ Delay ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤)
-- üîß ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏Ç‡∏ì‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
if game.PlaceId ~= 104715542330896 then
    warn("‚ùå ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏°‡∏û‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
    return
end

-- üåü ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô _G (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏Ç‡∏ì‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)
_G.ServerHopperConfig = _G.ServerHopperConfig or {
    -- ‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡∏ô‡∏≤‡∏ó‡∏µ)
    autoSwitchMinutes = 60,
    
    -- üíÄ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ü‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü
    maxPlayerKills = 1,
    
    -- ‚è±Ô∏è ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    killDelaySeconds = 15,
    
    -- üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü
    maxPlayersInServer = 16,
    
    -- ‚è±Ô∏è ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    playerCheckInterval = 30,
    
    -- ‚è±Ô∏è ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Python Server (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    connectionTestInterval = 120,
    
    -- üåê URL ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python Monitor
    monitorServerUrl = "http://185.84.160.178/api/roblox-servers",
    
    -- üé® ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• UI
    showUI = true,
    
    -- üìä ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô Console
    verboseLogging = false
}

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local placeId = game.PlaceId
local killedByPlayerCount = 0
local alreadyTeleported = false
local killDelayActive = false -- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ delay ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤

-- ‚è∞ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÅ‡∏ö‡∏ö‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
local serverStartTime = tick()
local lastSwitchTime = serverStartTime

-- üéØ UI Elements
local timerLabel, titleLabel, statusLabel, mainFrame, killDelayLabel

print("üìå ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡πÉ‡∏ä‡πâ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python Monitor)")
print("üîß ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:")
print("   ‚è∞ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å‡πÜ: " .. _G.ServerHopperConfig.autoSwitchMinutes .. " ‡∏ô‡∏≤‡∏ó‡∏µ")
print("   üíÄ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏Ü‡πà‡∏≤: " .. _G.ServerHopperConfig.maxPlayerKills .. " ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
print("   ‚è±Ô∏è ‡∏£‡∏≠‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤: " .. _G.ServerHopperConfig.killDelaySeconds .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
print("   üë• ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô: " .. _G.ServerHopperConfig.maxPlayersInServer .. " ‡∏Ñ‡∏ô")
print("üåê Monitor URL: " .. _G.ServerHopperConfig.monitorServerUrl)
print("")
print("üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ì‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:")
print("   _G.ServerHopperConfig.autoSwitchMinutes = 30  -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 30 ‡∏ô‡∏≤‡∏ó‡∏µ")
print("   _G.ServerHopperConfig.maxPlayerKills = 3      -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
print("   _G.ServerHopperConfig.killDelaySeconds = 20   -- ‡∏£‡∏≠ 20 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤")
print("   _G.ServerHopperConfig.maxPlayersInServer = 10 -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 10 ‡∏Ñ‡∏ô")
print("   _G.ServerHopperConfig.showUI = false          -- ‡∏ã‡πà‡∏≠‡∏ô UI")

-- üé® ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
local function createTimerUI()
    if not _G.ServerHopperConfig.showUI then return end
    
    local playerGui = player:WaitForChild("PlayerGui")
    
    -- ‡∏•‡∏ö UI ‡πÄ‡∏Å‡πà‡∏≤‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    local existingUI = playerGui:FindFirstChild("ServerTimerUI")
    if existingUI then existingUI:Destroy() end
    
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ServerTimerUI"
    screenGui.Parent = playerGui
    screenGui.ResetOnSpawn = false
    
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏´‡∏•‡∏±‡∏Å (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Kill Delay)
    mainFrame = Instance.new("Frame")
    mainFrame.Name = "TimerFrame"
    mainFrame.Size = UDim2.new(0, 380, 0, 140) -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
    mainFrame.Position = UDim2.new(0.5, -190, 0, 20)
    mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    mainFrame.BackgroundTransparency = 0.3
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    -- ‡πÄ‡∏û‡∏¥‡πà‡∏° UICorner ‡πÉ‡∏´‡πâ Frame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame
    
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á TextLabel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
    titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, 0, 0, 25)
    titleLabel.Position = UDim2.new(0, 0, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "üîÑ Python Monitor Connection"
    titleLabel.TextColor3 = Color3.fromRGB(100, 200, 255)
    titleLabel.TextSize = 14
    titleLabel.TextStrokeTransparency = 0
    titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = mainFrame
    
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á TextLabel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
    timerLabel = Instance.new("TextLabel")
    timerLabel.Name = "TimerLabel"
    timerLabel.Size = UDim2.new(1, 0, 0, 35)
    timerLabel.Position = UDim2.new(0, 0, 0, 30)
    timerLabel.BackgroundTransparency = 1
    timerLabel.Text = _G.ServerHopperConfig.autoSwitchMinutes .. ":00"
    timerLabel.TextColor3 = Color3.fromRGB(0, 200, 255)
    timerLabel.TextSize = 24
    timerLabel.TextStrokeTransparency = 0
    timerLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    timerLabel.Font = Enum.Font.GothamBold
    timerLabel.Parent = mainFrame
    
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á TextLabel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Kill Delay Countdown
    killDelayLabel = Instance.new("TextLabel")
    killDelayLabel.Name = "KillDelayLabel"
    killDelayLabel.Size = UDim2.new(1, 0, 0, 20)
    killDelayLabel.Position = UDim2.new(0, 0, 0, 65)
    killDelayLabel.BackgroundTransparency = 1
    killDelayLabel.Text = ""
    killDelayLabel.TextColor3 = Color3.fromRGB(255, 150, 150)
    killDelayLabel.TextSize = 12
    killDelayLabel.TextStrokeTransparency = 0
    killDelayLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    killDelayLabel.Font = Enum.Font.GothamBold
    killDelayLabel.Parent = mainFrame
    
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á TextLabel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(1, 0, 0, 20)
    statusLabel.Position = UDim2.new(0, 0, 0, 90)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "üîó ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠..."
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    statusLabel.TextSize = 12
    statusLabel.TextStrokeTransparency = 0
    statusLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.Parent = mainFrame
    
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á TextLabel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
    local configLabel = Instance.new("TextLabel")
    configLabel.Name = "ConfigLabel"
    configLabel.Size = UDim2.new(1, 0, 0, 20)
    configLabel.Position = UDim2.new(0, 0, 0, 115)
    configLabel.BackgroundTransparency = 1
    configLabel.Text = "‚öôÔ∏è ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü: " .. _G.ServerHopperConfig.autoSwitchMinutes .. "‡∏ô‡∏≤‡∏ó‡∏µ | ‡∏Ü‡πà‡∏≤: " .. _G.ServerHopperConfig.maxPlayerKills .. "‡∏Ñ‡∏£‡∏±‡πâ‡∏á | ‡∏£‡∏≠: " .. _G.ServerHopperConfig.killDelaySeconds .. "‡∏ß‡∏¥ | ‡∏Ñ‡∏ô: " .. _G.ServerHopperConfig.maxPlayersInServer
    configLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    configLabel.TextSize = 10
    configLabel.TextStrokeTransparency = 0
    configLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    configLabel.Font = Enum.Font.Gotham
    configLabel.Parent = mainFrame
    
    return timerLabel, titleLabel, statusLabel, configLabel, killDelayLabel
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
local function getTimeRemaining()
    local autoSwitchInterval = _G.ServerHopperConfig.autoSwitchMinutes * 60 -- ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    local elapsed = tick() - lastSwitchTime
    local remaining = autoSwitchInterval - elapsed
    local minutes = math.floor(remaining / 60)
    local seconds = math.floor(remaining % 60)
    return minutes, seconds, remaining
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï Kill Delay UI
local function updateKillDelayUI(remainingSeconds)
    if not _G.ServerHopperConfig.showUI or not killDelayLabel then return end
    
    if remainingSeconds > 0 then
        killDelayLabel.Text = "üíÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü: " .. remainingSeconds .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ..."
        killDelayLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    else
        killDelayLabel.Text = ""
    end
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡πÄ‡∏ß‡∏•‡∏≤
local function updateTimerUI()
    if not _G.ServerHopperConfig.showUI or not timerLabel then return end
    
    local minutes, seconds, remaining = getTimeRemaining()
    if remaining > 0 then
        timerLabel.Text = string.format("%02d:%02d", minutes, seconds)
        
        -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
        if remaining <= 60 then
            timerLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
            titleLabel.Text = "‚ö†Ô∏è Server Switch Soon!"
        elseif remaining <= 300 then
            timerLabel.TextColor3 = Color3.fromRGB(255, 200, 100)
            titleLabel.Text = "‚è∞ Python Monitor Active"
        else
            timerLabel.TextColor3 = Color3.fromRGB(0, 200, 255)
            titleLabel.Text = "üîÑ Python Monitor Connection"
        end
    else
        timerLabel.Text = "00:00"
        timerLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
        titleLabel.Text = "üöÄ Switching Server..."
    end
    
    -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
    local configLabel = mainFrame and mainFrame:FindFirstChild("ConfigLabel")
    if configLabel then
        configLabel.Text = "‚öôÔ∏è ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü: " .. _G.ServerHopperConfig.autoSwitchMinutes .. "‡∏ô‡∏≤‡∏ó‡∏µ | ‡∏Ü‡πà‡∏≤: " .. _G.ServerHopperConfig.maxPlayerKills .. "‡∏Ñ‡∏£‡∏±‡πâ‡∏á | ‡∏£‡∏≠: " .. _G.ServerHopperConfig.killDelaySeconds .. "‡∏ß‡∏¥ | ‡∏Ñ‡∏ô: " .. _G.ServerHopperConfig.maxPlayersInServer
    end
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
local function updateConnectionStatus(status, serverCount)
    if not _G.ServerHopperConfig.showUI or not statusLabel then return end
    
    if status == "connected" then
        statusLabel.Text = "‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à | ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: " .. (serverCount or 0)
        statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    elseif status == "error" then
        statusLabel.Text = "‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß | ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà..."
        statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    else
        statusLabel.Text = "üîó ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠..."
        statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    end
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö console)
local function printTimeStatus()
    if not _G.ServerHopperConfig.verboseLogging then return end
    
    local minutes, seconds, remaining = getTimeRemaining()
    if remaining > 0 then
        print("‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü: " .. minutes .. " ‡∏ô‡∏≤‡∏ó‡∏µ " .. seconds .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
    else
        print("‚è∞ ‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÅ‡∏•‡πâ‡∏ß!")
    end
end

-- ‚úÖ ‡∏ü‡∏±‡∏á Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ Teleport
TeleportService.TeleportInitFailed:Connect(function(failedPlayer, teleportResult, errorMessage)
    if failedPlayer == player and not alreadyTeleported then
        warn("‚ùå TeleportInitFailed:", teleportResult, errorMessage)
        task.delay(2, function()
            teleportToNewServer("TeleportInitFailed")
        end)
    end
end)

-- ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ string ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏•‡πâ‡∏ß‡∏ô
local function isNumericName(name)
    return name:match("^%d+$") ~= nil
end

-- ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ DeathMessage ‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏∑‡πà‡∏ô
local function checkIfKilledByOtherPlayer(text)
    if _G.ServerHopperConfig.verboseLogging then
        print("üîé ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: " .. text)
    end
    local textLower = text:lower()

    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player then
            local nameLower = otherPlayer.Name:lower()
            local displayLower = otherPlayer.DisplayName:lower()
            if textLower:find(nameLower) or textLower:find(displayLower) then
                if _G.ServerHopperConfig.verboseLogging then
                    print("üí• ‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:", otherPlayer.Name)
                end
                return true, otherPlayer.Name
            end
        end
    end

    for word in string.gmatch(text, "[^%s%-]+") do
        local cleanedWord = word:gsub("[^%d]", "")
        if isNumericName(cleanedWord) and #cleanedWord >= 6 then
            if _G.ServerHopperConfig.verboseLogging then
                print("üí• ‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏•‡πâ‡∏ß‡∏ô:", cleanedWord)
            end
            return true, cleanedWord
        end
    end

    if _G.ServerHopperConfig.verboseLogging then
        print("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
    end
    return false
end

-- üåê ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python Monitor ‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡πà‡∏° JobId
local function getRandomJobId()
    if _G.ServerHopperConfig.verboseLogging then
        print("üåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á JobId ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python Monitor...")
    end
    updateConnectionStatus("connecting")
    
    local success, response = pcall(function()
        return game:HttpGet(_G.ServerHopperConfig.monitorServerUrl)
    end)

    if success and response then
        local serverData = HttpService:JSONDecode(response)
        local serverList = {}
        
        for _, serverInfo in pairs(serverData) do
            if serverInfo.id and serverInfo.id ~= game.JobId then
                table.insert(serverList, serverInfo.id)
                if _G.ServerHopperConfig.verboseLogging then
                    print("‚úÖ ‡∏û‡∏ö JobId: " .. serverInfo.id .. " (‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: " .. serverInfo.playing .. "/" .. serverInfo.maxPlayers .. ", Ping: " .. serverInfo.ping .. ")")
                end
            end
        end
        
        if #serverList > 0 then
            updateConnectionStatus("connected", #serverList)
            if _G.ServerHopperConfig.verboseLogging then
                print("üîÅ ‡∏™‡∏∏‡πà‡∏° JobId ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: " .. #serverList)
            end
            return serverList[math.random(1, #serverList)]
        else
            updateConnectionStatus("error")
            warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")
        end
    else
        updateConnectionStatus("error")
        warn("‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " .. tostring(response))
        warn("üí° ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡∏∞ URL ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    end
    return nil
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ã‡πâ‡∏≥‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
function teleportToNewServer(reason)
    if alreadyTeleported then
        print("‚ö†Ô∏è ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ã‡πâ‡∏≥")
        return
    end

    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: " .. (reason or "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"))
    
    local attempt = 0

    while not alreadyTeleported do
        attempt += 1
        local jobId = getRandomJobId()

        if jobId then
            print("üöÄ [‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà " .. attempt .. "] ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° teleport ‡πÑ‡∏õ JobId: " .. jobId)

            local success, err = pcall(function()
                TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
            end)

            if not success then
                print("‚ùå pcall ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err)
                task.wait(2)
            else
                print("‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Teleport ‡πÅ‡∏•‡πâ‡∏ß")
                local checkTime = 0
                while checkTime < 10 do
                    if alreadyTeleported then break end
                    task.wait(1)
                    checkTime += 1
                end
                print("‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏¥‡∏° ‡∏•‡∏≠‡∏á teleport ‡πÉ‡∏´‡∏°‡πà")
            end
        else
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ JobId ‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ï ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô 3 ‡∏ß‡∏¥")
            task.wait(3)
        end
    end
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Kill Delay ‡∏û‡∏£‡πâ‡∏≠‡∏° Countdown
local function startKillDelay()
    if killDelayActive then return end -- ‡∏ñ‡πâ‡∏≤ delay ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
    
    killDelayActive = true
    local remainingTime = _G.ServerHopperConfig.killDelaySeconds
    
    print("‚è≥ ‡∏£‡∏≠ " .. _G.ServerHopperConfig.killDelaySeconds .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå...")
    
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á countdown loop
    task.spawn(function()
        while remainingTime > 0 and killDelayActive do
            updateKillDelayUI(remainingTime)
            task.wait(1)
            remainingTime -= 1
        end
        
        -- ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ
        if killDelayActive then
            updateKillDelayUI(0)
            print("‚è∞ ‡∏Ñ‡∏£‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå...")
            teleportToNewServer("‡∏ñ‡∏π‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ü‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î (‡∏´‡∏•‡∏±‡∏á‡∏£‡∏≠ " .. _G.ServerHopperConfig.killDelaySeconds .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)")
            killDelayActive = false
        end
    end)
end

-- ‚úÖ ‡∏•‡∏π‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö GUI DeathMessage
task.spawn(function()
    while not alreadyTeleported do
        local success, err = pcall(function()
            local guiPath = player:WaitForChild("PlayerGui"):FindFirstChild("DeathScreen")
            if not guiPath then error("DeathScreen ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö") end

            local holder = guiPath:FindFirstChild("DeathScreenHolder")
            if not holder then error("DeathScreenHolder ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö") end

            local frame1 = holder:FindFirstChild("Frame")
            if not frame1 then error("Frame ‡∏ä‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö") end

            local frame2 = frame1:FindFirstChild("Frame") or frame1
            local deathMessage = frame2:FindFirstChild("DeathMessage")
            if not deathMessage then error("DeathMessage ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö") end

            print("‚úÖ ‡∏û‡∏ö DeathMessage:", deathMessage)

            deathMessage:GetPropertyChangedSignal("Text"):Connect(function()
                local newText = deathMessage.Text
                if _G.ServerHopperConfig.verboseLogging then
                    print("üîÅ ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà: " .. newText)
                end

                local killed, killerName = checkIfKilledByOtherPlayer(newText)
                if killed then
                    killedByPlayerCount += 1
                    print("üíÄ ‡∏ñ‡∏π‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ü‡πà‡∏≤‡πÇ‡∏î‡∏¢: " .. killerName .. " (‡∏£‡∏ß‡∏° " .. killedByPlayerCount .. " ‡∏Ñ‡∏£‡∏±‡πâ‡∏á)")

                    if killedByPlayerCount >= _G.ServerHopperConfig.maxPlayerKills then
                        print("‚ö†Ô∏è ‡∏ñ‡∏π‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ü‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô " .. _G.ServerHopperConfig.maxPlayerKills .. " ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
                        startKillDelay() -- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                    end
                else
                    if _G.ServerHopperConfig.verboseLogging then
                        print("‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
                    end
                end
            end)
        end)

        if not success then
            warn("‚ùå ‡∏¢‡∏±‡∏á‡∏´‡∏≤ GUI ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠: " .. tostring(err))
            task.wait(5)
        else
            break
        end
    end
end)

-- ‚úÖ ‡∏•‡∏π‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü
task.spawn(function()
    if _G.ServerHopperConfig.verboseLogging then
        print("üìä ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏π‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
    end
    while not alreadyTeleported do
        local currentPlayers = #Players:GetPlayers()
        if _G.ServerHopperConfig.verboseLogging then
            print("üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü: " .. currentPlayers)
        end

        if currentPlayers > _G.ServerHopperConfig.maxPlayersInServer then
            print("‚ö†Ô∏è ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô " .. _G.ServerHopperConfig.maxPlayersInServer .. " ‡∏Ñ‡∏ô ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÉ‡∏´‡∏°‡πà...")
            teleportToNewServer("‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô " .. _G.ServerHopperConfig.maxPlayersInServer .. " ‡∏Ñ‡∏ô")
            break
        else
            if _G.ServerHopperConfig.verboseLogging then
                print("‚úÖ ‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°")
            end
        end
        wait(_G.ServerHopperConfig.playerCheckInterval)
    end
end)

-- ‚è∞ ‡∏•‡∏π‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
task.spawn(function()
    if _G.ServerHopperConfig.verboseLogging then
        print("‚è∞ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÅ‡∏ö‡∏ö‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤")
    end
    
    while not alreadyTeleported do
        local minutes, seconds, remaining = getTimeRemaining()
        
        -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        updateTimerUI()
        
        -- ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ
        if remaining > 0 and (remaining % 300 == 0 or remaining <= 60) then
            printTimeStatus()
        end
        
        -- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü
        if remaining <= 0 then
            print("‚è∞ ‡∏Ñ‡∏£‡∏ö " .. _G.ServerHopperConfig.autoSwitchMinutes .. " ‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå...")
            teleportToNewServer("‡∏Ñ‡∏£‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ " .. _G.ServerHopperConfig.autoSwitchMinutes .. " ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡∏≤‡∏°‡∏Å‡∏≥‡∏´‡∏ô‡∏î")
            break
        end
        
        task.wait(1) -- ‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    end
end)

-- ‚è∞ ‡∏•‡∏π‡∏õ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python
task.spawn(function()
    if _G.ServerHopperConfig.verboseLogging then
        print("üîó ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python")
    end
    while not alreadyTeleported do
        -- ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        task.wait(_G.ServerHopperConfig.connectionTestInterval)
        
        local success, response = pcall(function()
            return game:HttpGet(_G.ServerHopperConfig.monitorServerUrl)
        end)
        
        if success and response then
            local serverData = HttpService:JSONDecode(response)
            local serverCount = 0
            for _ in pairs(serverData) do
                serverCount = serverCount + 1
            end
            updateConnectionStatus("connected", serverCount)
            if _G.ServerHopperConfig.verboseLogging then
                print("üîó ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python ‡∏õ‡∏Å‡∏ï‡∏¥ (" .. serverCount .. " ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå)")
            end
        else
            updateConnectionStatus("error")
            warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Python ‡πÑ‡∏î‡πâ")
        end
    end
end)

-- üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
_G.resetServerTimer = function()
    lastSwitchTime = tick()
    print("üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡πâ‡∏ß")
    if _G.ServerHopperConfig.showUI then
        updateTimerUI()
    end
end

-- üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
_G.switchServerNow = function()
    print("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ...")
    teleportToNewServer("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏ó‡∏±‡∏ô‡∏ó‡∏µ")
end

-- üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å Kill Delay
_G.cancelKillDelay = function()
    if killDelayActive then
        killDelayActive = false
        updateKillDelayUI(0)
        print("üõë ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
    else
        print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏≠‡∏¢‡∏π‡πà")
    end
end

-- üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤
_G.resetKillCount = function()
    killedByPlayerCount = 0
    killDelayActive = false
    updateKillDelayUI(0)
    print("üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
end

-- üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
_G.showConfig = function()
    print("üîß ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:")
    print("   ‚è∞ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å‡πÜ: " .. _G.ServerHopperConfig.autoSwitchMinutes .. " ‡∏ô‡∏≤‡∏ó‡∏µ")
    print("   üíÄ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏Ü‡πà‡∏≤: " .. _G.ServerHopperConfig.maxPlayerKills .. " ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    print("   ‚è±Ô∏è ‡∏£‡∏≠‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤: " .. _G.ServerHopperConfig.killDelaySeconds .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
    print("   üë• ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô: " .. _G.ServerHopperConfig.maxPlayersInServer .. " ‡∏Ñ‡∏ô")
    print("   ‚è±Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏∏‡∏Å‡πÜ: " .. _G.ServerHopperConfig.playerCheckInterval .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
    print("   üîó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏∏‡∏Å‡πÜ: " .. _G.ServerHopperConfig.connectionTestInterval .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
    print("   üåê Monitor URL: " .. _G.ServerHopperConfig.monitorServerUrl)
    print("   üé® ‡πÅ‡∏™‡∏î‡∏á UI: " .. tostring(_G.ServerHopperConfig.showUI))
    print("   üìä ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: " .. tostring(_G.ServerHopperConfig.verboseLogging))
    print("üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:")
    print("   üíÄ ‡∏ñ‡∏π‡∏Å‡∏Ü‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß: " .. killedByPlayerCount .. " ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    print("   ‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤: " .. tostring(killDelayActive))
end

-- üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä UI
_G.refreshUI = function()
    if _G.ServerHopperConfig.showUI then
        createTimerUI()
        print("üé® ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä UI ‡πÅ‡∏•‡πâ‡∏ß")
    else
        -- ‡∏ã‡πà‡∏≠‡∏ô UI
        local playerGui = player:WaitForChild("PlayerGui")
        local existingUI = playerGui:FindFirstChild("ServerTimerUI")
        if existingUI then 
            existingUI:Destroy() 
            print("üé® ‡∏ã‡πà‡∏≠‡∏ô UI ‡πÅ‡∏•‡πâ‡∏ß")
        end
    end
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
createTimerUI()

-- ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
print("üéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:")
print("   - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ü‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô " .. _G.ServerHopperConfig.maxPlayerKills .. " ‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡∏£‡∏≠ " .. _G.ServerHopperConfig.killDelaySeconds .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢)")
print("   - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô " .. _G.ServerHopperConfig.maxPlayersInServer .. " ‡∏Ñ‡∏ô")
print("   - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å‡πÜ " .. _G.ServerHopperConfig.autoSwitchMinutes .. " ‡∏ô‡∏≤‡∏ó‡∏µ")
print("   - ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏à‡∏≤‡∏Å Python Monitor")
if _G.ServerHopperConfig.showUI then
    print("üé® UI Timer ‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏•‡πâ‡∏ß!")
end
print("üåê Monitor Server: " .. _G.ServerHopperConfig.monitorServerUrl)
print("")
print("üîß ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:")
print("   _G.showConfig()          -- ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")
print("   _G.resetServerTimer()    -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á")
print("   _G.switchServerNow()     -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ")
print("   _G.cancelKillDelay()     -- ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤")
print("   _G.resetKillCount()      -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤")
print("   _G.refreshUI()           -- ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä UI")
print("")
print("üí° ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤:")
print("   _G.ServerHopperConfig.autoSwitchMinutes = 30  -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 30 ‡∏ô‡∏≤‡∏ó‡∏µ")
print("   _G.ServerHopperConfig.maxPlayerKills = 3      -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
print("   _G.ServerHopperConfig.killDelaySeconds = 20   -- ‡∏£‡∏≠ 20 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô‡∏Ü‡πà‡∏≤")
print("   _G.ServerHopperConfig.maxPlayersInServer = 10 -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 10 ‡∏Ñ‡∏ô")
print("   _G.ServerHopperConfig.showUI = false          -- ‡∏ã‡πà‡∏≠‡∏ô UI")
print("   _G.ServerHopperConfig.verboseLogging = false  -- ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î")
print("   _G.refreshUI()  -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤")
printTimeStatus()

-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡πÅ‡∏•‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
updateTimerUI()
task.spawn(function()
    task.wait(2)
    getRandomJobId() -- ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
end)
